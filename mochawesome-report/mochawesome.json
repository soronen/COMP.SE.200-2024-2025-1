{
  "stats": {
    "suites": 29,
    "tests": 174,
    "passes": 155,
    "pending": 0,
    "failures": 19,
    "start": "2024-12-05T16:19:58.768Z",
    "end": "2024-12-05T16:19:58.817Z",
    "duration": 49,
    "testsRegistered": 174,
    "passPercent": 89.08045977011494,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9f35eb9d-e3dc-43a5-b3a0-0e850485d004",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d38f1c6e-279d-4495-8421-de420f966427",
          "title": "add",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\add.test.js",
          "file": "\\test\\add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "adds two positive numbers",
              "fullTitle": "add adds two positive numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(6, 4)).to.equal(10)",
              "err": {},
              "uuid": "9a302ac0-a786-40f8-a783-2907207c05a8",
              "parentUUID": "d38f1c6e-279d-4495-8421-de420f966427",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "adds two negative numbers",
              "fullTitle": "add adds two negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-6, -4)).to.equal(-10)",
              "err": {},
              "uuid": "e55e0b98-789b-461f-8c9c-ccbb69c1cdb6",
              "parentUUID": "d38f1c6e-279d-4495-8421-de420f966427",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "adds two floating point numbers",
              "fullTitle": "add adds two floating point numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(6.1, 4.2)).to.be.closeTo(10.3, 0.0001)",
              "err": {},
              "uuid": "0fa1775b-27b6-49c6-95b6-f6fd95c44904",
              "parentUUID": "d38f1c6e-279d-4495-8421-de420f966427",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "adds two numbers in scientific notation",
              "fullTitle": "add adds two numbers in scientific notation",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(6e2, 4e3)).to.equal(4600)",
              "err": {},
              "uuid": "19ddced8-8679-48e3-b6e7-893a1b3a6fc2",
              "parentUUID": "d38f1c6e-279d-4495-8421-de420f966427",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the other value if one number is NaN",
              "fullTitle": "add returns the other value if one number is NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(6, NaN)).to.deep.equal(NaN)",
              "err": {},
              "uuid": "3d8764e3-56de-4dd0-84dd-bc51b4607b4b",
              "parentUUID": "d38f1c6e-279d-4495-8421-de420f966427",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a302ac0-a786-40f8-a783-2907207c05a8",
            "e55e0b98-789b-461f-8c9c-ccbb69c1cdb6",
            "0fa1775b-27b6-49c6-95b6-f6fd95c44904",
            "19ddced8-8679-48e3-b6e7-893a1b3a6fc2",
            "3d8764e3-56de-4dd0-84dd-bc51b4607b4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "07f6c093-c7a1-46c6-9602-70a44e6a6324",
          "title": "at",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\at.test.js",
          "file": "\\test\\at.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Retrieves corret value from spacified path",
              "fullTitle": "at Retrieves corret value from spacified path",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(at(object, ['a[1]'])).to.deep.equal([4])",
              "err": {},
              "uuid": "57872640-5de8-4d15-a759-e3dbe71b513e",
              "parentUUID": "07f6c093-c7a1-46c6-9602-70a44e6a6324",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Retrieves corret values from multiple spacified paths",
              "fullTitle": "at Retrieves corret values from multiple spacified paths",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(at(object, ['a[0].b.c', 'a[1]'])).to.deep.equal([3, 4])",
              "err": {},
              "uuid": "9185ddc0-22cc-4acd-9c91-b81823b1983d",
              "parentUUID": "07f6c093-c7a1-46c6-9602-70a44e6a6324",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Correctly handles deeply nested paths",
              "fullTitle": "at Correctly handles deeply nested paths",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(at(object, ['a[0].b.c'])).to.deep.equal([3]);",
              "err": {},
              "uuid": "c21486ba-c9c1-4f5e-b495-1882ad786507",
              "parentUUID": "07f6c093-c7a1-46c6-9602-70a44e6a6324",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Retrieves undefined from undefined path",
              "fullTitle": "at Retrieves undefined from undefined path",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(at(object, ['a[2]'])).to.deep.equal([undefined])",
              "err": {},
              "uuid": "46a75984-f961-47e3-a9e7-9612bf3d2c6c",
              "parentUUID": "07f6c093-c7a1-46c6-9602-70a44e6a6324",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Retrieves undefined from null object",
              "fullTitle": "at Retrieves undefined from null object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(at(null, ['a[1]'])).to.deep.equal([undefined])",
              "err": {},
              "uuid": "e4079a70-c87e-42cb-937f-50eb7fa35e32",
              "parentUUID": "07f6c093-c7a1-46c6-9602-70a44e6a6324",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Returns empty array from object if no paths given",
              "fullTitle": "at Returns empty array from object if no paths given",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(at(object)).to.deep.equal([])",
              "err": {},
              "uuid": "16ecdbfd-946b-43e2-be91-78e14ffa8c7c",
              "parentUUID": "07f6c093-c7a1-46c6-9602-70a44e6a6324",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Returns empty array from wrong object",
              "fullTitle": "at Returns empty array from wrong object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(at('a[0].b.c')).to.deep.equal([])",
              "err": {},
              "uuid": "796e749f-d161-45c9-a1cd-346c9ee337c4",
              "parentUUID": "07f6c093-c7a1-46c6-9602-70a44e6a6324",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57872640-5de8-4d15-a759-e3dbe71b513e",
            "9185ddc0-22cc-4acd-9c91-b81823b1983d",
            "c21486ba-c9c1-4f5e-b495-1882ad786507",
            "46a75984-f961-47e3-a9e7-9612bf3d2c6c",
            "e4079a70-c87e-42cb-937f-50eb7fa35e32",
            "16ecdbfd-946b-43e2-be91-78e14ffa8c7c",
            "796e749f-d161-45c9-a1cd-346c9ee337c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "08f2d65b-283f-40ab-86c8-6de65e1b9872",
          "title": "camelCase",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\camelCase.test.js",
          "file": "\\test\\camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 'fooBar' from 'Foo Bar'",
              "fullTitle": "camelCase should return 'fooBar' from 'Foo Bar'",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase(\"Foo Bar\");\nexpect(result).to.equal(\"fooBar\");",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/camelCase.test.js:7:23)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "67f7c413-c0de-4ddc-8e34-3db636559388",
              "parentUUID": "08f2d65b-283f-40ab-86c8-6de65e1b9872",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 'fooBar' from '--foo-bar--'",
              "fullTitle": "camelCase should return 'fooBar' from '--foo-bar--'",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase(\"--foo-bar--\");\nexpect(result).to.equal(\"fooBar\");",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/camelCase.test.js:11:23)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "42d6fc67-2a8a-4f15-bb66-a946a404f5ca",
              "parentUUID": "08f2d65b-283f-40ab-86c8-6de65e1b9872",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 'fooBar' from '__FOO_BAR__'",
              "fullTitle": "camelCase should return 'fooBar' from '__FOO_BAR__'",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase(\"__FOO_BAR__\");\nexpect(result).to.equal(\"fooBar\");",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/camelCase.test.js:15:23)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "beb765c6-087a-49c9-b5f6-f0ba3d95f883",
              "parentUUID": "08f2d65b-283f-40ab-86c8-6de65e1b9872",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "67f7c413-c0de-4ddc-8e34-3db636559388",
            "42d6fc67-2a8a-4f15-bb66-a946a404f5ca",
            "beb765c6-087a-49c9-b5f6-f0ba3d95f883"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38c17eef-6c98-4591-932c-993af0db6916",
          "title": "capitalize",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\capitalize.test.js",
          "file": "\\test\\capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 'Word' from word",
              "fullTitle": "capitalize should return 'Word' from word",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = capitalize(\"word\");\nexpect(result).to.equal(\"Word\");",
              "err": {},
              "uuid": "d4f467a7-67e4-4e61-8436-bdfc0e6fbba1",
              "parentUUID": "38c17eef-6c98-4591-932c-993af0db6916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 'Fred' from FRED",
              "fullTitle": "capitalize should return 'Fred' from FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = capitalize(\"FRED\");\nexpect(result).to.equal(\"Fred\");",
              "err": {},
              "uuid": "fbe86fb0-2fb5-46eb-95d1-34ef87c9517c",
              "parentUUID": "38c17eef-6c98-4591-932c-993af0db6916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Works on a single word",
              "fullTitle": "capitalize Works on a single word",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize('word')).to.equal('Word')",
              "err": {},
              "uuid": "54c7a7c9-a64b-423f-af70-92dc2e5e84ff",
              "parentUUID": "38c17eef-6c98-4591-932c-993af0db6916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Works on two words",
              "fullTitle": "capitalize Works on two words",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize('word word')).to.equal('Word word')",
              "err": {},
              "uuid": "e32ad4e2-c644-4b5b-9ade-5f6c338b5247",
              "parentUUID": "38c17eef-6c98-4591-932c-993af0db6916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Works on an uppercase Word",
              "fullTitle": "capitalize Works on an uppercase Word",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize('Word')).to.equal('Word')",
              "err": {},
              "uuid": "5c686c8b-466a-4eb5-b8dd-23133b0387f3",
              "parentUUID": "38c17eef-6c98-4591-932c-993af0db6916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Works a non ascii character",
              "fullTitle": "capitalize Works a non ascii character",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize('ålesund')).to.equal('Ålesund')",
              "err": {},
              "uuid": "94b8da66-1d57-43e5-87ae-98e6696b02f2",
              "parentUUID": "38c17eef-6c98-4591-932c-993af0db6916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Does nothing for chinese characters",
              "fullTitle": "capitalize Does nothing for chinese characters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize('裁判')).to.equal('裁判')",
              "err": {},
              "uuid": "4e209c48-0e7b-4445-aa66-eb0647bdfa4c",
              "parentUUID": "38c17eef-6c98-4591-932c-993af0db6916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Does nothing for numbers",
              "fullTitle": "capitalize Does nothing for numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize('42')).to.equal('42')",
              "err": {},
              "uuid": "f7b45ed0-5c12-411f-b58d-57b2bdb538e6",
              "parentUUID": "38c17eef-6c98-4591-932c-993af0db6916",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4f467a7-67e4-4e61-8436-bdfc0e6fbba1",
            "fbe86fb0-2fb5-46eb-95d1-34ef87c9517c",
            "54c7a7c9-a64b-423f-af70-92dc2e5e84ff",
            "e32ad4e2-c644-4b5b-9ade-5f6c338b5247",
            "5c686c8b-466a-4eb5-b8dd-23133b0387f3",
            "94b8da66-1d57-43e5-87ae-98e6696b02f2",
            "4e209c48-0e7b-4445-aa66-eb0647bdfa4c",
            "f7b45ed0-5c12-411f-b58d-57b2bdb538e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f193876f-731b-40ff-aae9-f05b9ce281bb",
          "title": "castArray",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\castArray.test.js",
          "file": "\\test\\castArray.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return [1] for 1",
              "fullTitle": "castArray Should return [1] for 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(castArray(1)).to.deep.equal([1])",
              "err": {},
              "uuid": "93e8684d-46d9-403a-9868-56040e2fdc56",
              "parentUUID": "f193876f-731b-40ff-aae9-f05b9ce281bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return [{ 'a': 1 }] for { 'a': 1 }",
              "fullTitle": "castArray Should return [{ 'a': 1 }] for { 'a': 1 }",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(castArray({ 'a': 1 })).to.deep.equal([{ 'a': 1 }])",
              "err": {},
              "uuid": "02b198be-a3c0-4496-a3ea-c7b4b33ebd36",
              "parentUUID": "f193876f-731b-40ff-aae9-f05b9ce281bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return ['abc'] for 'abc'",
              "fullTitle": "castArray Should return ['abc'] for 'abc'",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(castArray('abc')).to.deep.equal(['abc'])",
              "err": {},
              "uuid": "35c9b1bb-d0d3-48e1-90cc-210fd8ec1385",
              "parentUUID": "f193876f-731b-40ff-aae9-f05b9ce281bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return [null] for null",
              "fullTitle": "castArray Should return [null] for null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(castArray(null)).to.deep.equal([null])",
              "err": {},
              "uuid": "7297960b-39f5-4549-993a-b3c969158b33",
              "parentUUID": "f193876f-731b-40ff-aae9-f05b9ce281bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return [undefined] for undefined",
              "fullTitle": "castArray Should return [undefined] for undefined",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(castArray(undefined)).to.deep.equal([undefined])",
              "err": {},
              "uuid": "57872395-7f98-4500-9df2-5feaec7893f5",
              "parentUUID": "f193876f-731b-40ff-aae9-f05b9ce281bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array for no arguments",
              "fullTitle": "castArray Should return empty array for no arguments",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(castArray()).to.deep.equal([])",
              "err": {
                "message": "AssertionError: expected [ undefined ] to deeply equal []",
                "estack": "AssertionError: expected [ undefined ] to deeply equal []\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/castArray.test.js:21:33)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "- [\n-   [undefined]\n- ]\n+ []\n"
              },
              "uuid": "bdc2c113-9ab9-447f-8e11-77f9d206bc84",
              "parentUUID": "f193876f-731b-40ff-aae9-f05b9ce281bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return same array that castArray function has get",
              "fullTitle": "castArray Should return same array that castArray function has get",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const array = [1, 2, 3]\nexpect(castArray(array)).to.equal(array)",
              "err": {},
              "uuid": "b92de6a1-d786-430b-9ea0-dc90bf92d377",
              "parentUUID": "f193876f-731b-40ff-aae9-f05b9ce281bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93e8684d-46d9-403a-9868-56040e2fdc56",
            "02b198be-a3c0-4496-a3ea-c7b4b33ebd36",
            "35c9b1bb-d0d3-48e1-90cc-210fd8ec1385",
            "7297960b-39f5-4549-993a-b3c969158b33",
            "57872395-7f98-4500-9df2-5feaec7893f5",
            "b92de6a1-d786-430b-9ea0-dc90bf92d377"
          ],
          "failures": [
            "bdc2c113-9ab9-447f-8e11-77f9d206bc84"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d580a13b-09cf-47f8-af69-2ad17fc912dc",
          "title": "ceil",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\ceil.test.js",
          "file": "\\test\\ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 5",
              "fullTitle": "ceil should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(ceil(4.006)).to.eql(5)",
              "err": {},
              "uuid": "2f444d72-2c11-4e93-b32f-22903730fc9f",
              "parentUUID": "d580a13b-09cf-47f8-af69-2ad17fc912dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 6.01",
              "fullTitle": "ceil should return 6.01",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(ceil(6.004, 2)).to.eql(6.01)",
              "err": {},
              "uuid": "bf8e18d3-9b5a-4d30-b6d1-a1996f934b21",
              "parentUUID": "d580a13b-09cf-47f8-af69-2ad17fc912dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 6100",
              "fullTitle": "ceil should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(ceil(6040, -2)).to.eql(6100)",
              "err": {},
              "uuid": "36051906-7ca9-4ba5-86c7-868bb807ca0a",
              "parentUUID": "d580a13b-09cf-47f8-af69-2ad17fc912dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f444d72-2c11-4e93-b32f-22903730fc9f",
            "bf8e18d3-9b5a-4d30-b6d1-a1996f934b21",
            "36051906-7ca9-4ba5-86c7-868bb807ca0a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "49d1b6ca-562a-400b-8aad-d1c72c13f2cd",
          "title": "chunk",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\chunk.test.js",
          "file": "\\test\\chunk.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should chunk an array without leftovers",
              "fullTitle": "chunk should chunk an array without leftovers",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(chunk(['a', 'b', 'c', 'd'], 2)).to.eql([['a', 'b'], ['c', 'd']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'c', 'd' ], undefined ] to deeply equal [ [ 'a', 'b' ], [ 'c', 'd' ] ]",
                "estack": "AssertionError: expected [ [ 'c', 'd' ], undefined ] to deeply equal [ [ 'a', 'b' ], [ 'c', 'd' ] ]\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/chunk.test.js:6:47)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": " [\n   [\n+     \"a\"\n+     \"b\"\n+   ]\n+   [\n     \"c\"\n     \"d\"\n   ]\n ]\n"
              },
              "uuid": "c3a4a353-45f2-4a63-a1fd-b3e3344a60ca",
              "parentUUID": "49d1b6ca-562a-400b-8aad-d1c72c13f2cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should chunk an array with leftovers",
              "fullTitle": "chunk should chunk an array with leftovers",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(chunk(['a', 'b', 'c', 'd'], 3)).to.eql([['a', 'b', 'c'], ['d']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'd', undefined, undefined ], …(1) ] to deeply equal [ [ 'a', 'b', 'c' ], [ 'd' ] ]",
                "estack": "AssertionError: expected [ [ 'd', undefined, undefined ], …(1) ] to deeply equal [ [ 'a', 'b', 'c' ], [ 'd' ] ]\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/chunk.test.js:9:47)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": " [\n   [\n+     \"a\"\n+     \"b\"\n+     \"c\"\n+   ]\n+   [\n     \"d\"\n-     [undefined]\n-     [undefined]\n   ]\n ]\n"
              },
              "uuid": "90af6b7c-8f21-44a0-ac37-6cb48de245b6",
              "parentUUID": "49d1b6ca-562a-400b-8aad-d1c72c13f2cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should chunk an empty array",
              "fullTitle": "chunk should chunk an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(chunk([], 2)).to.eql([]);",
              "err": {},
              "uuid": "895e117b-1a1d-4a88-92f8-680c562f4d54",
              "parentUUID": "49d1b6ca-562a-400b-8aad-d1c72c13f2cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "895e117b-1a1d-4a88-92f8-680c562f4d54"
          ],
          "failures": [
            "c3a4a353-45f2-4a63-a1fd-b3e3344a60ca",
            "90af6b7c-8f21-44a0-ac37-6cb48de245b6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d80e388-537f-44b6-9dcf-6fb9267f364c",
          "title": "clamp",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\clamp.test.js",
          "file": "\\test\\clamp.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should clamp a number out of bounds",
              "fullTitle": "clamp should clamp a number out of bounds",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(clamp(10, -5, 5)).to.equal(5);\nexpect(clamp(-10, -5, 5)).to.equal(-5);\nexpect(clamp(0, -5, 5)).to.equal(0);",
              "err": {
                "message": "AssertionError: expected -5 to equal 5",
                "estack": "AssertionError: expected -5 to equal 5\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/clamp.test.js:6:33)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "- -5\n+ 5\n"
              },
              "uuid": "6958eae1-4ae0-49c0-9297-9ce2cf553f1e",
              "parentUUID": "4d80e388-537f-44b6-9dcf-6fb9267f364c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the number if it is within the bounds",
              "fullTitle": "clamp should return the number if it is within the bounds",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(clamp(3, 1, 5)).to.equal(3);\nexpect(clamp(-3, -5, 0)).to.equal(-3);",
              "err": {
                "message": "AssertionError: expected 1 to equal 3",
                "estack": "AssertionError: expected 1 to equal 3\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/clamp.test.js:12:31)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "- 1\n+ 3\n"
              },
              "uuid": "9ee8903e-8d0d-4177-8df5-eaee1e2d7393",
              "parentUUID": "4d80e388-537f-44b6-9dcf-6fb9267f364c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle cases where lower and upper bounds are the same",
              "fullTitle": "clamp should handle cases where lower and upper bounds are the same",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(clamp(10, 5, 5)).to.equal(5);\nexpect(clamp(-10, -5, -5)).to.equal(-5);",
              "err": {},
              "uuid": "8d0e1b33-d461-4e91-84aa-8073c9cfbb07",
              "parentUUID": "4d80e388-537f-44b6-9dcf-6fb9267f364c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle cases where the number is NaN",
              "fullTitle": "clamp should handle cases where the number is NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(clamp(NaN, -5, 5)).to.be.NaN;",
              "err": {},
              "uuid": "3ed9c0e7-7153-463d-af24-0cff6b02ed9b",
              "parentUUID": "4d80e388-537f-44b6-9dcf-6fb9267f364c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d0e1b33-d461-4e91-84aa-8073c9cfbb07",
            "3ed9c0e7-7153-463d-af24-0cff6b02ed9b"
          ],
          "failures": [
            "6958eae1-4ae0-49c0-9297-9ce2cf553f1e",
            "9ee8903e-8d0d-4177-8df5-eaee1e2d7393"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3b0e583-4570-4b52-88e1-381cdd9aeca5",
          "title": "compact",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\compact.test.js",
          "file": "\\test\\compact.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should remove falsey values",
              "fullTitle": "compact should remove falsey values",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(compact([0, 1, false, 2, '', 3])).to.equal([1, 2, 3])",
              "err": {
                "message": "AssertionError: expected [ 2, 3, '-1': 1 ] to equal [ 1, 2, 3 ]",
                "estack": "AssertionError: expected [ 2, 3, '-1': 1 ] to equal [ 1, 2, 3 ]\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/compact.test.js:6:49)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": " [\n+   1\n   2\n   3\n ]\n"
              },
              "uuid": "ec118a45-f352-4d4b-be22-323c512bb2a2",
              "parentUUID": "b3b0e583-4570-4b52-88e1-381cdd9aeca5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return empty array when given an array filled with falsey values",
              "fullTitle": "compact should return empty array when given an array filled with falsey values",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(compact([0, false, '', null, undefined, NaN])).to.deep.equal([])",
              "err": {},
              "uuid": "a1969241-9b1c-4e65-93c4-bf31dd0a7661",
              "parentUUID": "b3b0e583-4570-4b52-88e1-381cdd9aeca5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return empty array when given an empty array",
              "fullTitle": "compact should return empty array when given an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(compact([])).to.deep.equal([])",
              "err": {},
              "uuid": "9aa3c175-e3e8-49b2-b90a-e2ccd0533500",
              "parentUUID": "b3b0e583-4570-4b52-88e1-381cdd9aeca5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1969241-9b1c-4e65-93c4-bf31dd0a7661",
            "9aa3c175-e3e8-49b2-b90a-e2ccd0533500"
          ],
          "failures": [
            "ec118a45-f352-4d4b-be22-323c512bb2a2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "71e6d4d6-2e0c-4c7f-bf85-9a0cc4c3a6fa",
          "title": "countBy",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\countBy.test.js",
          "file": "\\test\\countBy.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should count correct amount true and false results",
              "fullTitle": "countBy Should count correct amount true and false results",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(countBy(users, value => value.active)).to.deep.equal({ true: 2, false: 1 })",
              "err": {
                "message": "AssertionError: expected { true: 1, false: +0 } to deeply equal { true: 2, false: 1 }",
                "estack": "AssertionError: expected { true: 1, false: +0 } to deeply equal { true: 2, false: 1 }\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/countBy.test.js:11:63)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": " {\n-   \"false\": 0\n-   \"true\": 1\n+   \"false\": 1\n+   \"true\": 2\n }\n"
              },
              "uuid": "decbe701-4858-4fc0-8735-c9465dbd8f0e",
              "parentUUID": "71e6d4d6-2e0c-4c7f-bf85-9a0cc4c3a6fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should count undefined amount based on amount of users",
              "fullTitle": "countBy Should count undefined amount based on amount of users",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(countBy(users, value => value.undefined)).to.deep.equal({ undefined : 3 })",
              "err": {
                "message": "AssertionError: expected { undefined: 2 } to deeply equal { undefined: 3 }",
                "estack": "AssertionError: expected { undefined: 2 } to deeply equal { undefined: 3 }\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/countBy.test.js:14:66)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": " {\n-   \"undefined\": 2\n+   \"undefined\": 3\n }\n"
              },
              "uuid": "93d4d262-b612-4e45-a590-d77d26d620e2",
              "parentUUID": "71e6d4d6-2e0c-4c7f-bf85-9a0cc4c3a6fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array from null object",
              "fullTitle": "countBy Should return empty array from null object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(countBy(null, value => value.active)).to.deep.equal({})",
              "err": {},
              "uuid": "4074322d-1e01-4ca4-b31e-8b01fb3b5d50",
              "parentUUID": "71e6d4d6-2e0c-4c7f-bf85-9a0cc4c3a6fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array from undefined object",
              "fullTitle": "countBy Should return empty array from undefined object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(countBy(undefined, value => value.active)).to.deep.equal({})",
              "err": {},
              "uuid": "adba3b8c-9a51-4c36-bb21-df7b88ef7e6d",
              "parentUUID": "71e6d4d6-2e0c-4c7f-bf85-9a0cc4c3a6fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array from empty array",
              "fullTitle": "countBy Should return empty array from empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(countBy({}, value => value.active)).to.deep.equal({})",
              "err": {},
              "uuid": "97bb7e73-feca-4277-8046-0b523405ea12",
              "parentUUID": "71e6d4d6-2e0c-4c7f-bf85-9a0cc4c3a6fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4074322d-1e01-4ca4-b31e-8b01fb3b5d50",
            "adba3b8c-9a51-4c36-bb21-df7b88ef7e6d",
            "97bb7e73-feca-4277-8046-0b523405ea12"
          ],
          "failures": [
            "decbe701-4858-4fc0-8735-c9465dbd8f0e",
            "93d4d262-b612-4e45-a590-d77d26d620e2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "69a919f5-a448-4c36-bb22-95f5d39591b0",
          "title": "defaultToAny",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\defaultToAny.test.js",
          "file": "\\test\\defaultToAny.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return first value that is 1",
              "fullTitle": "defaultToAny Should return first value that is 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny(1, 10, 20)).to.equal(1)",
              "err": {},
              "uuid": "97b2777d-bbd7-484c-831e-7fdb8acb6708",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return second value if first is undefined that is 10",
              "fullTitle": "defaultToAny Should return second value if first is undefined that is 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny(undefined, 10, 20)).to.equal(10)",
              "err": {},
              "uuid": "b826b3a3-45e3-4b75-8176-7e18aec6f4e2",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return third value if first two is undefined that is 20",
              "fullTitle": "defaultToAny Should return third value if first two is undefined that is 20",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny(undefined, undefined, 20)).to.equal(20)",
              "err": {},
              "uuid": "2cdd527f-ac1d-4fbf-b8de-a55f074355e5",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return invalide value if all values are undefined",
              "fullTitle": "defaultToAny Should return invalide value if all values are undefined",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny(undefined, undefined, undefined)).to.NaN",
              "err": {
                "message": "AssertionError: expected undefined to be NaN",
                "estack": "AssertionError: expected undefined to be NaN\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/defaultToAny.test.js:15:65)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "2ad3f7f5-1ebf-4b46-9be4-d2c7a89ba4b9",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return second value if first is null that is 10",
              "fullTitle": "defaultToAny Should return second value if first is null that is 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny(null, 10, 20)).to.equal(10)",
              "err": {},
              "uuid": "7ee30246-89ee-423c-9c95-13b59c9d4795",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return second value if first is NaN that is 10",
              "fullTitle": "defaultToAny Should return second value if first is NaN that is 10",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny(NaN, 10, 20)).to.equal(10)",
              "err": {
                "message": "AssertionError: expected NaN to equal 10",
                "estack": "AssertionError: expected NaN to equal 10\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/defaultToAny.test.js:21:46)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "- NaN\n+ 10\n"
              },
              "uuid": "27dd22fd-3e39-4bfb-ae31-02ae031a0f49",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return first value that is 1 even if any value later is NaN",
              "fullTitle": "defaultToAny Should return first value that is 1 even if any value later is NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny(1, NaN, NaN)).to.equal(1)",
              "err": {},
              "uuid": "38c0e2b5-e192-4dce-b606-7f946f6c97fc",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return string value correctly",
              "fullTitle": "defaultToAny Should return string value correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny('value1', 'value2', 'value3')).to.equal('value1')",
              "err": {},
              "uuid": "ccc7dce7-1fd9-4031-b47d-ee43b11da224",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return boolean value correctly",
              "fullTitle": "defaultToAny Should return boolean value correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(defaultToAny(true, false, true)).to.equal(true)",
              "err": {},
              "uuid": "9d05a863-4a67-4c22-9174-75d3b0efe33b",
              "parentUUID": "69a919f5-a448-4c36-bb22-95f5d39591b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97b2777d-bbd7-484c-831e-7fdb8acb6708",
            "b826b3a3-45e3-4b75-8176-7e18aec6f4e2",
            "2cdd527f-ac1d-4fbf-b8de-a55f074355e5",
            "7ee30246-89ee-423c-9c95-13b59c9d4795",
            "38c0e2b5-e192-4dce-b606-7f946f6c97fc",
            "ccc7dce7-1fd9-4031-b47d-ee43b11da224",
            "9d05a863-4a67-4c22-9174-75d3b0efe33b"
          ],
          "failures": [
            "2ad3f7f5-1ebf-4b46-9be4-d2c7a89ba4b9",
            "27dd22fd-3e39-4bfb-ae31-02ae031a0f49"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
          "title": "difference",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\difference.test.js",
          "file": "\\test\\difference.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return one item from array that is not includet in the second array ",
              "fullTitle": "difference Should return one item from array that is not includet in the second array ",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference([2, 1], [2, 3])).to.deep.equal([1])",
              "err": {},
              "uuid": "3a2d21f8-18f7-421c-a22e-721ec49a46ed",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if all the items are includet in both arrays ",
              "fullTitle": "difference Should return empty array if all the items are includet in both arrays ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference([2, 3], [2, 3])).to.deep.equal([])",
              "err": {},
              "uuid": "2811e60a-06f6-4f4a-8f91-9370612972e8",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return multiple item from array that is not includet in the second array ",
              "fullTitle": "difference Should return multiple item from array that is not includet in the second array ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference([2, 1, 4, 5], [2, 3])).to.deep.equal([1, 4, 5])",
              "err": {},
              "uuid": "2d13c2b8-5195-42ba-9a7a-4859258c0a15",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return strings Hello world",
              "fullTitle": "difference Should return strings Hello world",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference(['abc', 'd', 'Hello', 'world'], ['abc', 'd'])).to.deep.equal(['Hello', 'world'])",
              "err": {},
              "uuid": "8f94c52d-1b08-4b7b-8f57-aaa0067f0a59",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return array that have null, undefined and NaN",
              "fullTitle": "difference Should return array that have null, undefined and NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference([null, undefined, NaN, 2], [2, 3])).to.deep.equal([null, undefined, NaN])",
              "err": {},
              "uuid": "1b704827-8c68-458a-83d5-6d84b77338b6",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if target is null",
              "fullTitle": "difference Should return empty array if target is null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference(null, [2, 3])).to.deep.equal([])",
              "err": {},
              "uuid": "27ca94ec-74b8-476a-874b-ce235bb78a04",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if target is undefined",
              "fullTitle": "difference Should return empty array if target is undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference(undefined, [2, 3])).to.deep.equal([])",
              "err": {},
              "uuid": "d932c72b-ddbc-4b46-aa44-5f95a3f2f3c6",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if target is undefined",
              "fullTitle": "difference Should return empty array if target is undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference(NaN, [2, 3])).to.deep.equal([])",
              "err": {},
              "uuid": "085c1c0a-767f-4133-b799-af96d4eb0ce0",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return first array as a whole if values is null",
              "fullTitle": "difference Should return first array as a whole if values is null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference([2, 1], null)).to.deep.equal([2, 1])",
              "err": {},
              "uuid": "dfafd00f-cc51-4368-b349-cdbf96dc43bb",
              "parentUUID": "b6aec569-7bab-4b89-a0ad-b9fc567c266e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a2d21f8-18f7-421c-a22e-721ec49a46ed",
            "2811e60a-06f6-4f4a-8f91-9370612972e8",
            "2d13c2b8-5195-42ba-9a7a-4859258c0a15",
            "8f94c52d-1b08-4b7b-8f57-aaa0067f0a59",
            "1b704827-8c68-458a-83d5-6d84b77338b6",
            "27ca94ec-74b8-476a-874b-ce235bb78a04",
            "d932c72b-ddbc-4b46-aa44-5f95a3f2f3c6",
            "085c1c0a-767f-4133-b799-af96d4eb0ce0",
            "dfafd00f-cc51-4368-b349-cdbf96dc43bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3297620b-b0fb-4c1a-ab00-08b5391f361f",
          "title": "divide",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\divide.test.js",
          "file": "\\test\\divide.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "divides two positive numbers with whole result",
              "fullTitle": "divide divides two positive numbers with whole result",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(divide(50, 10)).to.equal(5)",
              "err": {
                "message": "AssertionError: expected 1 to equal 5",
                "estack": "AssertionError: expected 1 to equal 5\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/divide.test.js:6:31)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "- 1\n+ 5\n"
              },
              "uuid": "4e9e8114-4971-4ea9-80e2-d689834c4a35",
              "parentUUID": "3297620b-b0fb-4c1a-ab00-08b5391f361f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divides whole numbers with decimal result",
              "fullTitle": "divide divides whole numbers with decimal result",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(divide(50, 11)).to.be.closeTo(4.545, 0.0001)",
              "err": {
                "message": "AssertionError: expected 1 to be close to 4.545 +/- 0.0001",
                "estack": "AssertionError: expected 1 to be close to 4.545 +/- 0.0001\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/divide.test.js:9:34)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "ca2c330d-d5ac-43e4-8f18-a9a951b3cc74",
              "parentUUID": "3297620b-b0fb-4c1a-ab00-08b5391f361f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divides two negative numbers",
              "fullTitle": "divide divides two negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(divide(-50, -5)).to.equal(10)",
              "err": {
                "message": "AssertionError: expected 1 to equal 10",
                "estack": "AssertionError: expected 1 to equal 10\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/divide.test.js:12:32)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "- 1\n+ 10\n"
              },
              "uuid": "ffbadd6e-09ae-4536-ae70-5c4e2aaedffe",
              "parentUUID": "3297620b-b0fb-4c1a-ab00-08b5391f361f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divides two numbers with decimals",
              "fullTitle": "divide divides two numbers with decimals",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(divide(7.5, 3.0).to.be.closeTo(2.5, 0.0001))",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'be')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'be')\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/divide.test.js:15:31)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "5248d335-35c3-4727-8ec4-a1c7d3617eb1",
              "parentUUID": "3297620b-b0fb-4c1a-ab00-08b5391f361f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divides two numbers in scientific notation",
              "fullTitle": "divide divides two numbers in scientific notation",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(divide(6e3, 3e1)).to.equal(200)",
              "err": {
                "message": "AssertionError: expected 1 to equal 200",
                "estack": "AssertionError: expected 1 to equal 200\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/divide.test.js:18:33)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "- 1\n+ 200\n"
              },
              "uuid": "05cf1cd6-f785-4d03-8f90-b189762c3131",
              "parentUUID": "3297620b-b0fb-4c1a-ab00-08b5391f361f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn't divide by zero",
              "fullTitle": "divide doesn't divide by zero",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(divide(6, 0)).to.deep.equal(NaN)",
              "err": {},
              "uuid": "5aca27a2-524b-433c-ba44-350d3857a3ff",
              "parentUUID": "3297620b-b0fb-4c1a-ab00-08b5391f361f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns NaN if one number is NaN",
              "fullTitle": "divide returns NaN if one number is NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(divide(6, NaN)).to.deep.equal(NaN)",
              "err": {},
              "uuid": "76edf591-bd2d-4112-a4d5-71361c9d135d",
              "parentUUID": "3297620b-b0fb-4c1a-ab00-08b5391f361f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5aca27a2-524b-433c-ba44-350d3857a3ff",
            "76edf591-bd2d-4112-a4d5-71361c9d135d"
          ],
          "failures": [
            "4e9e8114-4971-4ea9-80e2-d689834c4a35",
            "ca2c330d-d5ac-43e4-8f18-a9a951b3cc74",
            "ffbadd6e-09ae-4536-ae70-5c4e2aaedffe",
            "5248d335-35c3-4727-8ec4-a1c7d3617eb1",
            "05cf1cd6-f785-4d03-8f90-b189762c3131"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
          "title": "drop",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\drop.test.js",
          "file": "\\test\\drop.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return second element if not given number of elements to drop",
              "fullTitle": "drop Should return second element if not given number of elements to drop",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop([2, 1])).to.deep.equal([1])",
              "err": {},
              "uuid": "b33b68d6-4ead-4219-8ce9-5fdee92d5390",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return whole array if number is 0",
              "fullTitle": "drop Should return whole array if number is 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop([2, 1, 3], 0)).to.deep.equal([2, 1, 3])",
              "err": {},
              "uuid": "1674c3ba-45ba-4a84-8be8-993f6e6414d0",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return last element if array size -1",
              "fullTitle": "drop Should return last element if array size -1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop([2, 1, 3], 2)).to.deep.equal([3])",
              "err": {},
              "uuid": "3108bd98-47d4-4ff1-860e-30fa22f1c7cf",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if array size +1",
              "fullTitle": "drop Should return empty array if array size +1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop([2, 1, 3], 4)).to.deep.equal([])",
              "err": {},
              "uuid": "ebf86c06-ee99-4038-adae-7ffdea795e59",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return whole array if number is NaN",
              "fullTitle": "drop Should return whole array if number is NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop([2, 1, 3], NaN)).to.deep.equal([2, 1, 3])",
              "err": {},
              "uuid": "653e2cf9-b985-4aa0-8dcf-596cfff002a7",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if array is null",
              "fullTitle": "drop Should return empty array if array is null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop(null, 2)).to.deep.equal([])",
              "err": {},
              "uuid": "d36d42e7-d576-4146-b4a5-e4e9562c2474",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if array is undefined",
              "fullTitle": "drop Should return empty array if array is undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop(undefined, 2)).to.deep.equal([])",
              "err": {},
              "uuid": "caec8978-1582-4984-9c2c-2af2ad74f5d8",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if array is NaN",
              "fullTitle": "drop Should return empty array if array is NaN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop(NaN, 2)).to.deep.equal([])",
              "err": {},
              "uuid": "0c612a94-0921-41e5-886f-b03b183899c4",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if array and number is null",
              "fullTitle": "drop Should return empty array if array and number is null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(drop(null, null)).to.deep.equal([])",
              "err": {},
              "uuid": "d2965c2b-fe67-41e3-adf8-af97b6fa6e41",
              "parentUUID": "4e644964-9ea5-47d1-b2e1-d8a7026e8f83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b33b68d6-4ead-4219-8ce9-5fdee92d5390",
            "1674c3ba-45ba-4a84-8be8-993f6e6414d0",
            "3108bd98-47d4-4ff1-860e-30fa22f1c7cf",
            "ebf86c06-ee99-4038-adae-7ffdea795e59",
            "653e2cf9-b985-4aa0-8dcf-596cfff002a7",
            "d36d42e7-d576-4146-b4a5-e4e9562c2474",
            "caec8978-1582-4984-9c2c-2af2ad74f5d8",
            "0c612a94-0921-41e5-886f-b03b183899c4",
            "d2965c2b-fe67-41e3-adf8-af97b6fa6e41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "970f9049-13d0-42d9-99a5-aeafbc970360",
          "title": "endsWith",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\endsWith.test.js",
          "file": "\\test\\endsWith.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Return true if last character in string is same as is the target",
              "fullTitle": "endsWith Return true if last character in string is same as is the target",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith('abc', 'c')).to.equal(true)",
              "err": {},
              "uuid": "5fffa3bb-7610-4fd0-bba6-d0bb83e9087c",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return false if last character in string is not same as is the target",
              "fullTitle": "endsWith Return false if last character in string is not same as is the target",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith('abc', 'b')).to.equal(false)",
              "err": {},
              "uuid": "15a398a2-d385-4a70-b1d5-71d318f06ea7",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return true if character in string is same as is the target in specified position",
              "fullTitle": "endsWith Return true if character in string is same as is the target in specified position",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith('abc', 'b', 2)).to.equal(true)",
              "err": {},
              "uuid": "95e9219a-5ea5-4cec-a0de-14149be0d94e",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return true if multiple character in string is same as is the target that have multiple target in specified position",
              "fullTitle": "endsWith Return true if multiple character in string is same as is the target that have multiple target in specified position",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith('abc', 'bc', 3)).to.equal(true)",
              "err": {},
              "uuid": "b80d26ea-e3f9-47cb-a3a8-b8c5adaf44df",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return false if character in string is not same as is the target in specified position",
              "fullTitle": "endsWith Return false if character in string is not same as is the target in specified position",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith('abc', 'b', 3)).to.equal(false)",
              "err": {},
              "uuid": "67953ee9-34da-457e-8f56-8a9ce884784d",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return false if position is negative",
              "fullTitle": "endsWith Return false if position is negative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith('abc', 'a', -1)).to.equal(false)",
              "err": {},
              "uuid": "7e8cac75-5036-4914-92e1-d74d4af636ea",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return false if position is 0",
              "fullTitle": "endsWith Return false if position is 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith('abc', 'a', 0)).to.equal(false)",
              "err": {},
              "uuid": "d92c19d1-96cf-493c-8a5e-3ab55a7e9792",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return error if string is null",
              "fullTitle": "endsWith Return error if string is null",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => endsWith(null, 'n', 1)).to.Throw()",
              "err": {},
              "uuid": "bf162890-7609-4df3-b066-07f204f52c1d",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "reconize empty space",
              "fullTitle": "endsWith reconize empty space",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith('a c', '', 2)).to.equal(true)",
              "err": {},
              "uuid": "2eb05e21-f4f8-4659-b273-40b499d10295",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not reconize array characthers",
              "fullTitle": "endsWith should not reconize array characthers",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(endsWith(['a', 'b', 'c'], 'b', 2)).to.equal(false)",
              "err": {
                "message": "AssertionError: expected true to equal false",
                "estack": "AssertionError: expected true to equal false\n    at Context.<anonymous> (file:///C:/Users/Eetu/Projects/COMP.SE.200-2024-2025-1/test/endsWith.test.js:33:50)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": "- true\n+ false\n"
              },
              "uuid": "ce9e5517-8227-41db-bee6-6f10490b104b",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not reconize array numbers",
              "fullTitle": "endsWith should not reconize array numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(endsWith([1, 2, 3], 2, 2)).to.equal(false)",
              "err": {},
              "uuid": "6ec66fd7-6609-4f67-8a5b-c40bce7001f5",
              "parentUUID": "970f9049-13d0-42d9-99a5-aeafbc970360",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fffa3bb-7610-4fd0-bba6-d0bb83e9087c",
            "15a398a2-d385-4a70-b1d5-71d318f06ea7",
            "95e9219a-5ea5-4cec-a0de-14149be0d94e",
            "b80d26ea-e3f9-47cb-a3a8-b8c5adaf44df",
            "67953ee9-34da-457e-8f56-8a9ce884784d",
            "7e8cac75-5036-4914-92e1-d74d4af636ea",
            "d92c19d1-96cf-493c-8a5e-3ab55a7e9792",
            "bf162890-7609-4df3-b066-07f204f52c1d",
            "2eb05e21-f4f8-4659-b273-40b499d10295",
            "6ec66fd7-6609-4f67-8a5b-c40bce7001f5"
          ],
          "failures": [
            "ce9e5517-8227-41db-bee6-6f10490b104b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b404985-4297-4e8c-a2bc-1e2eb176b089",
          "title": "eq",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\eq.test.js",
          "file": "\\test\\eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true for equal values",
              "fullTitle": "eq should return true for equal values",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(eq(1, 1)).to.equal(true);\nexpect(eq('abc', 'abc')).to.equal(true);\nexpect(eq(NaN, NaN)).to.equal(true);\nexpect(eq(null, null)).to.equal(true);\nexpect(eq(undefined, undefined)).to.equal(true);",
              "err": {},
              "uuid": "46bd79fb-957d-47bf-87f9-8dff7378a447",
              "parentUUID": "2b404985-4297-4e8c-a2bc-1e2eb176b089",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for non-equal values",
              "fullTitle": "eq should return false for non-equal values",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(eq(1, 2)).to.equal(false);\nexpect(eq(1, 'abs')).to.equal(false);\nexpect(eq('abc', 'def')).to.equal(false);\nexpect(eq(NaN, 1)).to.equal(false);",
              "err": {},
              "uuid": "c4d48382-d061-4283-83a3-67efd13f2f1d",
              "parentUUID": "2b404985-4297-4e8c-a2bc-1e2eb176b089",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for 1 and '1' in accordance with the ES standard",
              "fullTitle": "eq should return true for 1 and '1' in accordance with the ES standard",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(eq(1, '1')).to.equal(true);",
              "err": {},
              "uuid": "a312b1b8-98dd-46b5-9668-30e10ffa612b",
              "parentUUID": "2b404985-4297-4e8c-a2bc-1e2eb176b089",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46bd79fb-957d-47bf-87f9-8dff7378a447",
            "c4d48382-d061-4283-83a3-67efd13f2f1d",
            "a312b1b8-98dd-46b5-9668-30e10ffa612b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "70b276f1-6d5f-4694-86f1-01373fb53ef1",
          "title": "every",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\every.test.js",
          "file": "\\test\\every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns false if not all values are true",
              "fullTitle": "every returns false if not all values are true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(every([true, 1, null, 'yes'], Boolean)).to.equal(false)",
              "err": {},
              "uuid": "10633249-3395-4144-aa97-6d56314789fe",
              "parentUUID": "70b276f1-6d5f-4694-86f1-01373fb53ef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns true if all values are true",
              "fullTitle": "every returns true if all values are true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(every([true, 1, 'yes'], Boolean)).to.equal(true)",
              "err": {},
              "uuid": "b515ea0f-b2e4-4f46-8d4b-60e3913a4c53",
              "parentUUID": "70b276f1-6d5f-4694-86f1-01373fb53ef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns true for an empty array",
              "fullTitle": "every returns true for an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(every([], Boolean)).to.equal(true);",
              "err": {},
              "uuid": "9adf6c0d-675a-4fb4-8d2f-7c045ea14ed1",
              "parentUUID": "70b276f1-6d5f-4694-86f1-01373fb53ef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "stops iteration once a false value is encountered",
              "fullTitle": "every stops iteration once a false value is encountered",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\nconst predicate = (value) => {\n  count++;\n  return Boolean(value);\n}\nevery([true, false, true], predicate)\nexpect(count).to.equal(2)",
              "err": {},
              "uuid": "b66d8a0b-a379-46b7-98c1-09741d8ae893",
              "parentUUID": "70b276f1-6d5f-4694-86f1-01373fb53ef1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10633249-3395-4144-aa97-6d56314789fe",
            "b515ea0f-b2e4-4f46-8d4b-60e3913a4c53",
            "9adf6c0d-675a-4fb4-8d2f-7c045ea14ed1",
            "b66d8a0b-a379-46b7-98c1-09741d8ae893"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01631ee5-8d1c-429f-a2f6-d963edf0a120",
          "title": "filter",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\filter.test.js",
          "file": "\\test\\filter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return objects for [\"barney\"]",
              "fullTitle": "filter should return objects for [\"barney\"]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const users = [\n  { 'user': 'barney', 'active': true },\n  { 'user': 'fred', 'active': false }\n];\nconst result = filter(users, ({ active }) => active);\nexpect(result).to.deep.equal([{ 'user': 'barney', 'active': true }]);",
              "err": {},
              "uuid": "2e1c7463-9829-4a73-b3fb-b7bb8e6852cc",
              "parentUUID": "01631ee5-8d1c-429f-a2f6-d963edf0a120",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty array when the input is an empty array",
              "fullTitle": "filter should return an empty array when the input is an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const users = [];\nconst result = filter(users, ({ active }) => active);\nexpect(result).to.deep.equal([[]]);",
              "err": {},
              "uuid": "fd2141c3-f6ab-440e-ac06-e1ad2e694ffc",
              "parentUUID": "01631ee5-8d1c-429f-a2f6-d963edf0a120",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty array when the input is null",
              "fullTitle": "filter should return an empty array when the input is null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const users = null;\nconst result = filter(users, ({ active }) => active);\nexpect(result).to.deep.equal([[]]);",
              "err": {},
              "uuid": "c50a7c0d-07af-49de-8f6e-62c47a0f9b8f",
              "parentUUID": "01631ee5-8d1c-429f-a2f6-d963edf0a120",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e1c7463-9829-4a73-b3fb-b7bb8e6852cc",
            "fd2141c3-f6ab-440e-ac06-e1ad2e694ffc",
            "c50a7c0d-07af-49de-8f6e-62c47a0f9b8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b674d36a-9f95-4a4d-90df-73897db5ff9c",
          "title": "isBoolean",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\isBoolean.test.js",
          "file": "\\test\\isBoolean.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "recognizes true",
              "fullTitle": "isBoolean recognizes true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isBoolean(true)).to.equal(true)",
              "err": {},
              "uuid": "bc9f766c-6416-4d4b-a03c-cc1383315508",
              "parentUUID": "b674d36a-9f95-4a4d-90df-73897db5ff9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "recognizes false",
              "fullTitle": "isBoolean recognizes false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isBoolean(false)).to.equal(true)",
              "err": {},
              "uuid": "753dcdce-c0ea-4acf-9407-024197504a42",
              "parentUUID": "b674d36a-9f95-4a4d-90df-73897db5ff9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn't recognize a truthy value",
              "fullTitle": "isBoolean doesn't recognize a truthy value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isBoolean(1)).to.equal(false)",
              "err": {},
              "uuid": "b3977e1c-4e9f-4066-81e9-89bc9db030f8",
              "parentUUID": "b674d36a-9f95-4a4d-90df-73897db5ff9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn't recognize a string",
              "fullTitle": "isBoolean doesn't recognize a string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isBoolean('true')).to.equal(false)",
              "err": {},
              "uuid": "b6b5ba56-89b4-4e39-969e-239b4dba6248",
              "parentUUID": "b674d36a-9f95-4a4d-90df-73897db5ff9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn't recognize a falsy value",
              "fullTitle": "isBoolean doesn't recognize a falsy value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isBoolean(0)).to.equal(false)",
              "err": {},
              "uuid": "268af3ce-fb73-44a6-87fe-0cf13ec65d1d",
              "parentUUID": "b674d36a-9f95-4a4d-90df-73897db5ff9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn't recognize a string",
              "fullTitle": "isBoolean doesn't recognize a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isBoolean('false')).to.equal(false)",
              "err": {},
              "uuid": "c3b09f6b-566a-44bf-9b6a-840464ae0b97",
              "parentUUID": "b674d36a-9f95-4a4d-90df-73897db5ff9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc9f766c-6416-4d4b-a03c-cc1383315508",
            "753dcdce-c0ea-4acf-9407-024197504a42",
            "b3977e1c-4e9f-4066-81e9-89bc9db030f8",
            "b6b5ba56-89b4-4e39-969e-239b4dba6248",
            "268af3ce-fb73-44a6-87fe-0cf13ec65d1d",
            "c3b09f6b-566a-44bf-9b6a-840464ae0b97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
          "title": "isDate",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\isDate.test.js",
          "file": "\\test\\isDate.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Recognize the new date as a date object",
              "fullTitle": "isDate Recognize the new date as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(new Date)).to.equal(true)",
              "err": {},
              "uuid": "5441c6ae-5782-41d4-8e65-cfd9c21a84c5",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Recognize the first date as a date object",
              "fullTitle": "isDate Recognize the first date as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(new Date(0))).to.equal(true)",
              "err": {},
              "uuid": "af0e8f8c-3bd2-46fb-959f-621185bb8555",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Recognize the day before first date as a date object",
              "fullTitle": "isDate Recognize the day before first date as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(new Date(0 - 1))).to.equal(true)",
              "err": {},
              "uuid": "e0caf8eb-4c79-4893-8105-9cd7fe3ed264",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Recognize the last date as a date object",
              "fullTitle": "isDate Recognize the last date as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(new Date(8.64e15))).to.equal(true)",
              "err": {},
              "uuid": "05bc2ed8-9347-44ff-a79d-cd39888d616a",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Recognize the one day over last date as a date object",
              "fullTitle": "isDate Recognize the one day over last date as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(new Date(8.64e15 + 1))).to.equal(true)",
              "err": {},
              "uuid": "8116f408-d30c-4fb7-8b44-3ac1f4759dc2",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not recognize text of date as a date object",
              "fullTitle": "isDate does not recognize text of date as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate('Mon April 23 2012')).to.equal(false)",
              "err": {},
              "uuid": "8acfa74e-81da-4832-83eb-a13c1e59c83a",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Recognize invalid date as a date object",
              "fullTitle": "isDate Recognize invalid date as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const invalidDate = new Date('invalid date')\nexpect(isDate(invalidDate)).to.equal(true)\nexpect(isNaN(invalidDate.getTime())).to.equal(true)",
              "err": {},
              "uuid": "22b4a361-dada-45d0-bf00-7719a9bea576",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not recognize number as a date object",
              "fullTitle": "isDate does not recognize number as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(23.2012)).to.equal(false)",
              "err": {},
              "uuid": "cad97231-9269-44d7-8458-c6b08b008ba2",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Does not recognize array as a date object",
              "fullTitle": "isDate Does not recognize array as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate([])).to.equal(false)",
              "err": {},
              "uuid": "88222495-1ec4-43f7-a070-a482235d37b4",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Does not recognize function as a date object",
              "fullTitle": "isDate Does not recognize function as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(() => {})).to.equal(false)",
              "err": {},
              "uuid": "0ba17afa-2f77-47ec-83d4-e8c1b8336edc",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Does not recognize null as a date object",
              "fullTitle": "isDate Does not recognize null as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(null)).to.equal(false)",
              "err": {},
              "uuid": "05ca0546-591f-428e-aa4e-6783fa55e222",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Does not recognize undefined as a date object",
              "fullTitle": "isDate Does not recognize undefined as a date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isDate(undefined)).to.equal(false)",
              "err": {},
              "uuid": "7efcd116-e228-4345-a446-cadd4085af83",
              "parentUUID": "24bdfdd3-0ebf-4fd2-a13d-3bb40b208cb3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5441c6ae-5782-41d4-8e65-cfd9c21a84c5",
            "af0e8f8c-3bd2-46fb-959f-621185bb8555",
            "e0caf8eb-4c79-4893-8105-9cd7fe3ed264",
            "05bc2ed8-9347-44ff-a79d-cd39888d616a",
            "8116f408-d30c-4fb7-8b44-3ac1f4759dc2",
            "8acfa74e-81da-4832-83eb-a13c1e59c83a",
            "22b4a361-dada-45d0-bf00-7719a9bea576",
            "cad97231-9269-44d7-8458-c6b08b008ba2",
            "88222495-1ec4-43f7-a070-a482235d37b4",
            "0ba17afa-2f77-47ec-83d4-e8c1b8336edc",
            "05ca0546-591f-428e-aa4e-6783fa55e222",
            "7efcd116-e228-4345-a446-cadd4085af83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
          "title": "isEmpty",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\isEmpty.test.js",
          "file": "\\test\\isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true for an empty array",
              "fullTitle": "isEmpty should return true for an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty([])).to.eql(true)",
              "err": {},
              "uuid": "f6f93b6b-6212-4de1-aea0-1583d88674aa",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for null",
              "fullTitle": "isEmpty should return true for null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty(null)).to.eql(true)",
              "err": {},
              "uuid": "dd4b0dde-88e0-4e74-81d0-e97a78ad9b5a",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for 1",
              "fullTitle": "isEmpty should return true for 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty(1)).to.eql(true)",
              "err": {},
              "uuid": "4a9e0b91-38bf-4793-b7ff-cc2791b6a6a8",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty object",
              "fullTitle": "isEmpty should return true for an empty object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty({})).to.eql(true)",
              "err": {},
              "uuid": "3ed37d03-d4ab-4b98-9466-30f46d8ce621",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for [1, 2, 3]",
              "fullTitle": "isEmpty should return false for [1, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty([1, 2, 3])).to.eql(false)",
              "err": {},
              "uuid": "7b00a69f-ad6e-4bbd-bc62-a29292f38684",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for 'abc'",
              "fullTitle": "isEmpty should return false for 'abc'",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty('abc')).to.eql(false)",
              "err": {},
              "uuid": "1971d0a0-fae0-4560-808b-068c96c927ab",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for {a: 1, b: 2, c: 3}",
              "fullTitle": "isEmpty should return false for {a: 1, b: 2, c: 3}",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty({ a: 1, b: 2, c: 3 })).to.eql(false)",
              "err": {},
              "uuid": "c18c1a40-e7b4-4d6d-ad67-2c7ad69ef53b",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if map or set is empty",
              "fullTitle": "isEmpty should return true if map or set is empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty(new Map())).to.eql(true)\nexpect(isEmpty(new Set())).to.eql(true)",
              "err": {},
              "uuid": "8e252509-686a-4cd4-ae9b-a3150ed0d935",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty prototype",
              "fullTitle": "isEmpty should return true for an empty prototype",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function Foo() { }\nexpect(isEmpty(Foo.prototype)).to.eql(true);",
              "err": {},
              "uuid": "98a6166f-2a2e-4e98-b207-2e2048435ed9",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a prototype with properties",
              "fullTitle": "isEmpty should return false for a prototype with properties",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function Foo() { }\nFoo.prototype.c = 3;\nexpect(isEmpty(Foo.prototype)).to.eql(false);",
              "err": {},
              "uuid": "0bad6d6b-4d7e-4526-b68e-c1b724fdf2d8",
              "parentUUID": "2b69d50a-0253-4cdc-9714-ce8c526fb0f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6f93b6b-6212-4de1-aea0-1583d88674aa",
            "dd4b0dde-88e0-4e74-81d0-e97a78ad9b5a",
            "4a9e0b91-38bf-4793-b7ff-cc2791b6a6a8",
            "3ed37d03-d4ab-4b98-9466-30f46d8ce621",
            "7b00a69f-ad6e-4bbd-bc62-a29292f38684",
            "1971d0a0-fae0-4560-808b-068c96c927ab",
            "c18c1a40-e7b4-4d6d-ad67-2c7ad69ef53b",
            "8e252509-686a-4cd4-ae9b-a3150ed0d935",
            "98a6166f-2a2e-4e98-b207-2e2048435ed9",
            "0bad6d6b-4d7e-4526-b68e-c1b724fdf2d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ca6130ca-9736-4250-8ef3-fec299ccb071",
          "title": "isTypedArray",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\isTypedArray.test.js",
          "file": "\\test\\isTypedArray.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true for Float64Array",
              "fullTitle": "isTypedArray should return true for Float64Array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isTypedArray(new Float64Array(2))).to.be.true;",
              "err": {},
              "uuid": "f6eb53c8-f1dd-4cc5-bbdb-54dea1a911ed",
              "parentUUID": "ca6130ca-9736-4250-8ef3-fec299ccb071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for Int32Array",
              "fullTitle": "isTypedArray should return true for Int32Array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isTypedArray(new Int32Array(2))).to.be.true;",
              "err": {},
              "uuid": "9605ddd7-7b66-401a-9546-857ade62b63d",
              "parentUUID": "ca6130ca-9736-4250-8ef3-fec299ccb071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for Uint8ClampedArray",
              "fullTitle": "isTypedArray should return true for Uint8ClampedArray",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isTypedArray(new Uint8ClampedArray(2))).to.be.true;",
              "err": {},
              "uuid": "5d86c850-4a14-40fb-bc47-ce46e7fd8c7e",
              "parentUUID": "ca6130ca-9736-4250-8ef3-fec299ccb071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for Uint16Array",
              "fullTitle": "isTypedArray should return true for Uint16Array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isTypedArray(new Uint16Array(2))).to.be.true;",
              "err": {},
              "uuid": "dba874b9-63a7-4779-99ad-57afbd309188",
              "parentUUID": "ca6130ca-9736-4250-8ef3-fec299ccb071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for ArrayBuffer",
              "fullTitle": "isTypedArray should return false for ArrayBuffer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isTypedArray(new ArrayBuffer(2))).to.be.false;",
              "err": {},
              "uuid": "acaf22cd-5084-439f-adcf-676a70ef6a2f",
              "parentUUID": "ca6130ca-9736-4250-8ef3-fec299ccb071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for regular arrays",
              "fullTitle": "isTypedArray should return false for regular arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isTypedArray([])).to.be.false;\nexpect(isTypedArray([1, 2, 3])).to.be.false;",
              "err": {},
              "uuid": "ce63fe19-eb12-486b-8863-9b351f162470",
              "parentUUID": "ca6130ca-9736-4250-8ef3-fec299ccb071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for undefined",
              "fullTitle": "isTypedArray should return false for undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isTypedArray(null)).to.be.false;\nexpect(isTypedArray(undefined)).to.be.false;",
              "err": {},
              "uuid": "514f64ed-361d-4638-8759-4f4f5545fc45",
              "parentUUID": "ca6130ca-9736-4250-8ef3-fec299ccb071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for non-array values",
              "fullTitle": "isTypedArray should return false for non-array values",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isTypedArray({})).to.be.false;\nexpect(isTypedArray(() => { })).to.be.false;\nexpect(isTypedArray(new Date())).to.be.false;\nexpect(isTypedArray('notarray')).to.be.false;\nexpect(isTypedArray(true)).to.be.false;",
              "err": {},
              "uuid": "de36b2c6-df2e-47ad-b21b-86406b6d7f32",
              "parentUUID": "ca6130ca-9736-4250-8ef3-fec299ccb071",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6eb53c8-f1dd-4cc5-bbdb-54dea1a911ed",
            "9605ddd7-7b66-401a-9546-857ade62b63d",
            "5d86c850-4a14-40fb-bc47-ce46e7fd8c7e",
            "dba874b9-63a7-4779-99ad-57afbd309188",
            "acaf22cd-5084-439f-adcf-676a70ef6a2f",
            "ce63fe19-eb12-486b-8863-9b351f162470",
            "514f64ed-361d-4638-8759-4f4f5545fc45",
            "de36b2c6-df2e-47ad-b21b-86406b6d7f32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "45eab468-52f0-4c6f-94b1-69b2679c3bae",
          "title": "map",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\map.test.js",
          "file": "\\test\\map.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should square the numbers in the array",
              "fullTitle": "map should square the numbers in the array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = map([4, 8], (n) => n * n);\nexpect(result).to.deep.equal([16, 64]);",
              "err": {},
              "uuid": "f060b953-8568-4a9a-b40d-62ad00c627b9",
              "parentUUID": "45eab468-52f0-4c6f-94b1-69b2679c3bae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty array when given an empty array",
              "fullTitle": "map should return an empty array when given an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = map([], (n) => n * n);\nexpect(result).to.deep.equal([]);",
              "err": {},
              "uuid": "cd03525f-8772-434d-aed4-184c4d83953d",
              "parentUUID": "45eab468-52f0-4c6f-94b1-69b2679c3bae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty array when given null",
              "fullTitle": "map should return an empty array when given null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = map(null, (n) => n * n);\nexpect(result).to.deep.equal([]);",
              "err": {},
              "uuid": "058b172a-ba8b-4480-89a9-ac968b8e3bc2",
              "parentUUID": "45eab468-52f0-4c6f-94b1-69b2679c3bae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f060b953-8568-4a9a-b40d-62ad00c627b9",
            "cd03525f-8772-434d-aed4-184c4d83953d",
            "058b172a-ba8b-4480-89a9-ac968b8e3bc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "987db361-3116-46e3-b3f5-52fa72f649aa",
          "title": "memoize",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\memoize.test.js",
          "file": "\\test\\memoize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return [1, 2]",
              "fullTitle": "memoize should return [1, 2]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = values(object);\nexpect(result).to.deep.equal([1, 2]);",
              "err": {},
              "uuid": "a28c7508-4798-4992-90e9-9a27b3b1478a",
              "parentUUID": "987db361-3116-46e3-b3f5-52fa72f649aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return [3, 4]",
              "fullTitle": "memoize should return [3, 4]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = values(other);\nexpect(result).to.deep.equal([3, 4]);",
              "err": {},
              "uuid": "fb1ff805-bcc2-4040-843b-e223a48b4c55",
              "parentUUID": "987db361-3116-46e3-b3f5-52fa72f649aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when the input is not a function",
              "fullTitle": "memoize should throw an error when the input is not a function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => memoize('string')).to.throw(TypeError);",
              "err": {},
              "uuid": "3712217c-3af4-4e43-b38a-bf90785f9ffb",
              "parentUUID": "987db361-3116-46e3-b3f5-52fa72f649aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when the resolver is not a function",
              "fullTitle": "memoize should throw an error when the resolver is not a function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => memoize(() => { }, 'string')).to.throw(TypeError);",
              "err": {},
              "uuid": "08915124-f639-4230-ac24-45dbe1c2f51e",
              "parentUUID": "987db361-3116-46e3-b3f5-52fa72f649aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "memozie function cache should have a key after memoize call",
              "fullTitle": "memoize memozie function cache should have a key after memoize call",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = values(object);\nexpect(values.cache.has(object)).to.equal(true);",
              "err": {},
              "uuid": "12046c32-82ce-49b1-b520-ad6485e66597",
              "parentUUID": "987db361-3116-46e3-b3f5-52fa72f649aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use the cache after the first call",
              "fullTitle": "memoize should use the cache after the first call",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dynamic_object = { 'a': 1, 'b': 2 }\nexpect(values(dynamic_object)).to.deep.equal([1, 2]);\ndynamic_object.a = 2;\nexpect(values(dynamic_object)).to.deep.equal([1, 2]);",
              "err": {},
              "uuid": "982068af-39af-4948-b357-e59605239a10",
              "parentUUID": "987db361-3116-46e3-b3f5-52fa72f649aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use resolver to generate cache key",
              "fullTitle": "memoize should use resolver to generate cache key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const resolver = (...args) => args.join('-');\nconst memoizedSum = memoize(sum, resolver);\nexpect(memoizedSum(1, 2)).to.equal(3);\nexpect(memoizedSum.cache.has('1-2')).to.equal(true);",
              "err": {},
              "uuid": "9ff70fd7-5da9-4515-b6d4-78927e2e0ce9",
              "parentUUID": "987db361-3116-46e3-b3f5-52fa72f649aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a28c7508-4798-4992-90e9-9a27b3b1478a",
            "fb1ff805-bcc2-4040-843b-e223a48b4c55",
            "3712217c-3af4-4e43-b38a-bf90785f9ffb",
            "08915124-f639-4230-ac24-45dbe1c2f51e",
            "12046c32-82ce-49b1-b520-ad6485e66597",
            "982068af-39af-4948-b357-e59605239a10",
            "9ff70fd7-5da9-4515-b6d4-78927e2e0ce9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "758fe4d4-2d03-4c86-8155-0dd700f05eed",
          "title": "reduce",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\reduce.test.js",
          "file": "\\test\\reduce.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 3",
              "fullTitle": "reduce should return 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const array = [1, 2];\nconst result = reduce(array, (result, value, key) => result + value, 0);\nexpect(result).to.equal(3);",
              "err": {},
              "uuid": "1be0e1cc-6f14-4d06-98bf-202ef85251f6",
              "parentUUID": "758fe4d4-2d03-4c86-8155-0dd700f05eed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return { '1': ['a', 'c'], '2': ['b'] }",
              "fullTitle": "reduce should return { '1': ['a', 'c'], '2': ['b'] }",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const object = { 'a': 1, 'b': 2, 'c': 1 };\nconst result = reduce(object, (result, value, key) => {\n  (result[value] || (result[value] = [])).push(key)\n  return result\n}, {})\nexpect(result).to.deep.equal({ '1': ['a', 'c'], '2': ['b'] });",
              "err": {},
              "uuid": "5f0cfce8-0c8b-4c97-af24-699e61390b8e",
              "parentUUID": "758fe4d4-2d03-4c86-8155-0dd700f05eed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1be0e1cc-6f14-4d06-98bf-202ef85251f6",
            "5f0cfce8-0c8b-4c97-af24-699e61390b8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "189a6db4-16c7-4879-920d-aa6fcebfcec0",
          "title": "toFinite",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\toFinite.test.js",
          "file": "\\test\\toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 3.2",
              "fullTitle": "toFinite should return 3.2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite(3.2)).to.eql(3.2)",
              "err": {},
              "uuid": "a3137085-8f91-4436-97a3-0a4c4b71be6a",
              "parentUUID": "189a6db4-16c7-4879-920d-aa6fcebfcec0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 5e-324",
              "fullTitle": "toFinite should return 5e-324",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite(Number.MIN_VALUE)).to.eql(5e-324)",
              "err": {},
              "uuid": "20e29f03-dc31-4904-8121-d7da2c4e6d8c",
              "parentUUID": "189a6db4-16c7-4879-920d-aa6fcebfcec0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 1.7976931348623157e+308",
              "fullTitle": "toFinite should return 1.7976931348623157e+308",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite(Infinity)).to.eql(1.7976931348623157e+308)",
              "err": {},
              "uuid": "1fff4a9b-55a0-4e5a-a9b8-2ab0188f234f",
              "parentUUID": "189a6db4-16c7-4879-920d-aa6fcebfcec0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 3.2",
              "fullTitle": "toFinite should return 3.2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite(\"3.2\")).to.eql(3.2)",
              "err": {},
              "uuid": "abf4d6e5-b2aa-4a9c-9f5c-a76ef9e26de4",
              "parentUUID": "189a6db4-16c7-4879-920d-aa6fcebfcec0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the max finite value for Infinity",
              "fullTitle": "toFinite should return the max finite value for Infinity",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite(Infinity)).to.eql(1.7976931348623157e+308);\nexpect(toFinite(-Infinity)).to.eql(-1.7976931348623157e+308);",
              "err": {},
              "uuid": "8d2d5abd-7cde-4c35-8856-501a417ba943",
              "parentUUID": "189a6db4-16c7-4879-920d-aa6fcebfcec0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0 for falsy values other than 0",
              "fullTitle": "toFinite should return 0 for falsy values other than 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite(null)).to.eql(0);\nexpect(toFinite(undefined)).to.eql(0);\nexpect(toFinite(false)).to.eql(0);\nexpect(toFinite(NaN)).to.eql(0);\nexpect(toFinite(\"\")).to.eql(0);",
              "err": {},
              "uuid": "b11278a5-347b-4243-9f5f-e7eff6ca8228",
              "parentUUID": "189a6db4-16c7-4879-920d-aa6fcebfcec0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3137085-8f91-4436-97a3-0a4c4b71be6a",
            "20e29f03-dc31-4904-8121-d7da2c4e6d8c",
            "1fff4a9b-55a0-4e5a-a9b8-2ab0188f234f",
            "abf4d6e5-b2aa-4a9c-9f5c-a76ef9e26de4",
            "8d2d5abd-7cde-4c35-8856-501a417ba943",
            "b11278a5-347b-4243-9f5f-e7eff6ca8228"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "014b135a-a68d-4b26-a7bf-970ff7d91bbf",
          "title": "toInteger",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\toInteger.test.js",
          "file": "\\test\\toInteger.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 3",
              "fullTitle": "toInteger should return 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toInteger(3.2)).to.eql(3)",
              "err": {},
              "uuid": "e3f166c9-8dff-40e8-a48b-54e60c94e235",
              "parentUUID": "014b135a-a68d-4b26-a7bf-970ff7d91bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0",
              "fullTitle": "toInteger should return 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toInteger(Number.MIN_VALUE)).to.eql(0)",
              "err": {},
              "uuid": "55615225-6c22-4352-b3f0-dafc80d8eb47",
              "parentUUID": "014b135a-a68d-4b26-a7bf-970ff7d91bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 1.7976931348623157e+308",
              "fullTitle": "toInteger should return 1.7976931348623157e+308",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toInteger(Infinity)).to.eql(1.7976931348623157e+308)",
              "err": {},
              "uuid": "a880a341-72ad-4cd5-87e6-9737c974aec9",
              "parentUUID": "014b135a-a68d-4b26-a7bf-970ff7d91bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 3",
              "fullTitle": "toInteger should return 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toInteger(\"3.2\")).to.eql",
              "err": {},
              "uuid": "6b341c69-ae72-4d3e-b65b-e4460e11c4c6",
              "parentUUID": "014b135a-a68d-4b26-a7bf-970ff7d91bbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3f166c9-8dff-40e8-a48b-54e60c94e235",
            "55615225-6c22-4352-b3f0-dafc80d8eb47",
            "a880a341-72ad-4cd5-87e6-9737c974aec9",
            "6b341c69-ae72-4d3e-b65b-e4460e11c4c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0c5c3a8d-bb19-4e4d-b16d-568b97206f03",
          "title": "toNumber",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\toNumber.test.js",
          "file": "\\test\\toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a number when given a number",
              "fullTitle": "toNumber should return a number when given a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toNumber(-1)).to.equal(-1);\nexpect(toNumber(0)).to.equal(0);\nexpect(toNumber(3)).to.equal(3);\nexpect(toNumber(3.2)).to.equal(3.2);",
              "err": {},
              "uuid": "2185df15-48f1-402c-8b7f-98d7c71114fb",
              "parentUUID": "0c5c3a8d-bb19-4e4d-b16d-568b97206f03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a number when given a string",
              "fullTitle": "toNumber should return a number when given a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toNumber('-1')).to.equal(-1);\nexpect(toNumber('0')).to.equal(0);\nexpect(toNumber('3')).to.equal(3);\nexpect(toNumber('3.2')).to.equal(3.2);",
              "err": {},
              "uuid": "8dc0d52b-42e7-435e-9c34-6c8edc9ba102",
              "parentUUID": "0c5c3a8d-bb19-4e4d-b16d-568b97206f03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return NaN when given an object",
              "fullTitle": "toNumber should return NaN when given an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = toNumber({});\nexpect(result).to.be.NaN;",
              "err": {},
              "uuid": "f84a63c3-bb47-48c9-83fb-2df28edc21f8",
              "parentUUID": "0c5c3a8d-bb19-4e4d-b16d-568b97206f03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return NaN when given an function",
              "fullTitle": "toNumber should return NaN when given an function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = toNumber(() => { });\nexpect(result).to.be.NaN;",
              "err": {},
              "uuid": "6709731f-d1f4-4485-9cdd-53a5e18c18f6",
              "parentUUID": "0c5c3a8d-bb19-4e4d-b16d-568b97206f03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return NAN when given a symbol",
              "fullTitle": "toNumber should return NAN when given a symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = toNumber(Symbol());\nexpect(result).to.be.NaN;",
              "err": {},
              "uuid": "55209dc8-27d9-44dc-9820-43e8dca1dd71",
              "parentUUID": "0c5c3a8d-bb19-4e4d-b16d-568b97206f03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return NaN if given an non-number string",
              "fullTitle": "toNumber should return NaN if given an non-number string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toNumber('abc')).to.be.NaN;",
              "err": {},
              "uuid": "be99a582-2114-4a66-a6a1-51efef1ec5b5",
              "parentUUID": "0c5c3a8d-bb19-4e4d-b16d-568b97206f03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -0 when given 0 according to the  IEEE 754 standard",
              "fullTitle": "toNumber should return -0 when given 0 according to the  IEEE 754 standard",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toNumber('-0')).to.be.equal(-0);\nexpect(toNumber(-0)).to.be.equal(-0);",
              "err": {},
              "uuid": "9b0d3105-ea88-4868-b7f6-27a994a02e51",
              "parentUUID": "0c5c3a8d-bb19-4e4d-b16d-568b97206f03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2185df15-48f1-402c-8b7f-98d7c71114fb",
            "8dc0d52b-42e7-435e-9c34-6c8edc9ba102",
            "f84a63c3-bb47-48c9-83fb-2df28edc21f8",
            "6709731f-d1f4-4485-9cdd-53a5e18c18f6",
            "55209dc8-27d9-44dc-9820-43e8dca1dd71",
            "be99a582-2114-4a66-a6a1-51efef1ec5b5",
            "9b0d3105-ea88-4868-b7f6-27a994a02e51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fa077db5-9376-4398-b942-72901e90d33b",
          "title": "upperFirst",
          "fullFile": "C:\\Users\\Eetu\\Projects\\COMP.SE.200-2024-2025-1\\test\\upperFirst.test.js",
          "file": "\\test\\upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Works on a single word",
              "fullTitle": "upperFirst Works on a single word",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst('word')).to.equal('Word')",
              "err": {},
              "uuid": "b4cb4f7b-fb36-427d-a62e-c72689c3f563",
              "parentUUID": "fa077db5-9376-4398-b942-72901e90d33b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Works on two words",
              "fullTitle": "upperFirst Works on two words",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst('word word')).to.equal('Word word')",
              "err": {},
              "uuid": "f5e29733-3592-4ab4-aaac-387ae7f2aabe",
              "parentUUID": "fa077db5-9376-4398-b942-72901e90d33b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Works on an uppercase Word",
              "fullTitle": "upperFirst Works on an uppercase Word",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst('Word')).to.equal('Word')",
              "err": {},
              "uuid": "7317aa69-f338-4e45-9c50-ce97da76af17",
              "parentUUID": "fa077db5-9376-4398-b942-72901e90d33b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Works a non ascii character",
              "fullTitle": "upperFirst Works a non ascii character",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst('ålesund')).to.equal('Ålesund')",
              "err": {},
              "uuid": "c8ef5af9-d0ab-4e4e-a71e-10cf55b8cf6e",
              "parentUUID": "fa077db5-9376-4398-b942-72901e90d33b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Does nothing for chinese characters",
              "fullTitle": "upperFirst Does nothing for chinese characters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst('裁判')).to.equal('裁判')",
              "err": {},
              "uuid": "8bf96f41-180b-4f41-b0f2-7a2466692780",
              "parentUUID": "fa077db5-9376-4398-b942-72901e90d33b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Does nothing for numbers",
              "fullTitle": "upperFirst Does nothing for numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst('42')).to.equal('42')",
              "err": {},
              "uuid": "b9fa2000-3864-4710-aac9-6a7882866a9a",
              "parentUUID": "fa077db5-9376-4398-b942-72901e90d33b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4cb4f7b-fb36-427d-a62e-c72689c3f563",
            "f5e29733-3592-4ab4-aaac-387ae7f2aabe",
            "7317aa69-f338-4e45-9c50-ce97da76af17",
            "c8ef5af9-d0ab-4e4e-a71e-10cf55b8cf6e",
            "8bf96f41-180b-4f41-b0f2-7a2466692780",
            "b9fa2000-3864-4710-aac9-6a7882866a9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}